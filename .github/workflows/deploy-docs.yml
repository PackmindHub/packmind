name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'apps/doc/**'
      - 'packages/ui/**'
      - 'packages/assets/**'
      - '.github/workflows/deploy-docs.yml'
  workflow_dispatch:

# Sets permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Docusaurus
    runs-on: ${{ vars.ACTION_RUNNER_TAG || 'self-hosted' }}
    
    strategy:
      matrix:
        node-version: ["22.17.0"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Use production tsconfig
        run: node scripts/select-tsconfig.mjs

      - name: Build website
        run: ./node_modules/.bin/nx build doc
        env:
          NODE_ENV: production
          GIT_REPO: ${{ vars.GIT_REPO }}

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/apps/doc

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ${{ vars.ACTION_RUNNER_TAG || 'self-hosted' }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
