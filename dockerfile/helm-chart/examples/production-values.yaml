# Production values for Packmind Helm Chart
# This file contains production-ready configurations

global:
  labels:
    environment: production
    team: platform
    cost-center: engineering
  annotations:
    contact: devops@packmind.com

# Use external managed databases for production
postgresql:
  enabled: false
  external:
    # Complete database URL including credentials
    databaseUrl: 'postgres://packmind_user:password@packmind-postgres.region.rds.amazonaws.com:5432/packmind'
    # Alternative: use existing secret containing the database URL
    # existingSecret: "packmind-db-secret"
    # existingSecretKey: "database-url"

redis:
  enabled: false
  external:
    host: 'packmind-redis.region.cache.amazonaws.com'
    port: 6379
    existingSecret: 'packmind-redis-secret'
    existingSecretPasswordKey: 'password'

# Production API configuration
api:
  replicaCount: 3

  image:
    repository: packmind/api
    tag: 'v1.0.0'
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 1Gi

  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  env:
    NODE_ENV: 'production'
    COOKIE_SECURE: 'true'

# Production Frontend configuration
frontend:
  replicaCount: 2

  image:
    repository: packmind/frontend
    tag: 'v1.0.0'
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Production MCP Server configuration
mcpServer:
  replicaCount: 2

  image:
    repository: packmind/mcp
    tag: 'v1.0.0'
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

  env:
    RATE_LIMIT_MAX_REQUESTS: '50000'

# Production ingress with TLS
ingress:
  enabled: true
  className: 'nginx'
  annotations:
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '10m'
    nginx.ingress.kubernetes.io/rate-limit: '100'
    nginx.ingress.kubernetes.io/rate-limit-window: '1m'
  hosts:
    - host: packmind.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: frontend
        - path: /api
          pathType: Prefix
          backend:
            service: api
        - path: /mcp
          pathType: Prefix
          backend:
            service: mcp-server
  tls:
    - secretName: packmind-tls
      hosts:
        - packmind.yourdomain.com

# Use existing secrets (create these manually)
secrets:
  existing:
    apiSecret: 'packmind-api-secrets'
    mcpSecret: 'packmind-mcp-secrets'
    databaseSecret: 'packmind-db-secret'
    redisSecret: 'packmind-redis-secret'

# Network policies for security
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 5432 # PostgreSQL
        - protocol: TCP
          port: 6379 # Redis
    - to: []
      ports:
        - protocol: TCP
          port: 443 # HTTPS outbound
        - protocol: TCP
          port: 80 # HTTP outbound

# Security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 3000
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
